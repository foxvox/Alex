#include <iostream>
using namespace std;

/*
성능 최적화
생성자 내부에서 대입(= ) 연산을 사용하면 기본 생성자가 먼저 호출된 후 대입 연산이 수행되므로 불필요한 작업이 발생할 수 있습니다.
멤버 초기화 리스트를 사용하면 직접 초기화되므로 불필요한 연산을 줄이고 성능을 최적화할 수 있습니다.
const 및 참조 변수 초기화 가능
const 멤버 변수와 참조 변수(&)는 초기화 리스트를 통해서만 설정할 수 있습니다.
생성자 내부에서 값을 할당하려고 하면 컴파일 오류가 발생합니다.
클래스 멤버(객체) 올바르게 초기화
클래스 내에 또 다른 객체가 포함된 경우, 초기화 리스트를 사용하면 해당 객체의 생성자를 직접 호출하여 초기화할 수 있습니다.
*/

/*
✔ const 변수와 참조 변수는 반드시 초기화 리스트를 사용해야 함.
✔ 성능 최적화를 위해 초기화 리스트를 사용하면 불필요한 연산을 방지할 수 있음.
✔ 포함된 클래스 객체를 올바르게 초기화하는 데도 유용함.
*/

class Example {
private:
    const int a;  // const 변수
    int& ref;     // 참조 변수
public:
    // 멤버 초기화 리스트를 사용한 생성자
    Example(int x, int& y) : a(x), ref(y) {
        cout << "초기화 완료! a: " << a << ", ref: " << ref << endl;
    }
};

int main() {
    int num = 20;
    Example obj(10, num);
    return 0;
}
